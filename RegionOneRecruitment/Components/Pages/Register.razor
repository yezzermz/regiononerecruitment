@page "/register"
@using Microsoft.EntityFrameworkCore
@using RegionOneRecruitment.Models
@using RegionOneRecruitment.DBContext
@inject IDbContextFactory<DataContext> UserDataContextFactory;

<PageTitle>User Registration</PageTitle>

<h1>Please register to apply for Job Openings</h1>

@if (showSuccessMessage)
{
    <div class="alert alert-success" role="alert">
        Registration successful! Welcome to our platform.
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<div class="row mb-3">
    <label for="FirstName" class="col-4 col-form-label">First Name:</label>
    <div class="col-8">
        <input id="FirstName" name="FirstName" type="text" class="form-control" @bind="@NewUser.FirstName" />
    </div>
</div>

<div class="row mb-3">
    <label for="LastName" class="col-4 col-form-label">Last Name:</label>
    <div class="col-8">
        <input id="LastName" name="LastName" type="text" class="form-control" @bind="@NewUser.LastName" />
    </div>
</div>

<div class="row mb-3">
    <label for="Email" class="col-4 col-form-label">Email:</label>
    <div class="col-8">
        <input id="Email" name="Email" type="email" class="form-control" @bind="@NewUser.Email" />
    </div>
</div>

<div class="row mb-3">
    <label for="Phone" class="col-4 col-form-label">Phone Number:</label>
    <div class="col-8">
        <input id="Phone" name="Phone" type="text" class="form-control" @bind="@NewUser.Phone" />
    </div>
</div>

<div class="row mb-3">
    <label class="col-4 col-form-label">Job Interests:</label>
    <div class="col-8">
        <div class="input-group">
            <input id="JobInterest" name="JobInterest" type="text" class="form-control" @bind="@NewJobInterest" />
            <button type="button" class="btn btn-outline-secondary" @onclick="AddJobInterest">Add Interest</button>
        </div>
        @if (JobInterests != null)
        {
            <ul class="list-group mt-2">
                @foreach (var interest in JobInterests)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @interest
                        <button type="button" class="btn btn-danger btn-sm" @onclick="() => RemoveJobInterest(interest)">Remove</button>
                    </li>
                }
            </ul>
        }
    </div>
</div>

<div class="row mb-3">
    <label for="Password" class="col-4 col-form-label">Password:</label>
    <div class="col-8">
        <input id="Password" name="Password" type="password" class="form-control" @bind="@NewUser.Password" />
    </div>
</div>

<div class="row mb-3">
    <label for="resume" class="col-4 col-form-label">Resume (PDF only, max 5MB):</label>
    <div class="col-8">
        <InputFile OnChange="HandleResumeUpload" accept=".pdf" class="form-control" />
        @if (!string.IsNullOrEmpty(resumeFileName))
        {
            <p class="mt-2">Uploaded file: @resumeFileName</p>
        }
    </div>
</div>

<button type="submit" class="btn btn-primary" @onclick="CreateNewUserAsync">Register</button>
